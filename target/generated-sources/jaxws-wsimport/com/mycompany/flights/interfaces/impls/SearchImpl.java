
package com.mycompany.flights.interfaces.impls;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SearchImpl", targetNamespace = "http://impls.interfaces.flights.mycompany.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SearchImpl {


    /**
     * 
     * @param date
     * @param cityFrom
     * @param cityTo
     * @return
     *     returns java.util.List<com.mycompany.flights.interfaces.impls.Flight>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchFlight", targetNamespace = "http://impls.interfaces.flights.mycompany.com/", className = "com.mycompany.flights.interfaces.impls.SearchFlight")
    @ResponseWrapper(localName = "searchFlightResponse", targetNamespace = "http://impls.interfaces.flights.mycompany.com/", className = "com.mycompany.flights.interfaces.impls.SearchFlightResponse")
    @Action(input = "http://impls.interfaces.flights.mycompany.com/SearchImpl/searchFlightRequest", output = "http://impls.interfaces.flights.mycompany.com/SearchImpl/searchFlightResponse")
    public List<Flight> searchFlight(
        @WebParam(name = "date", targetNamespace = "")
        long date,
        @WebParam(name = "cityFrom", targetNamespace = "")
        City cityFrom,
        @WebParam(name = "cityTo", targetNamespace = "")
        City cityTo);

    /**
     * 
     * @return
     *     returns java.util.List<com.mycompany.flights.interfaces.impls.City>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllCities", targetNamespace = "http://impls.interfaces.flights.mycompany.com/", className = "com.mycompany.flights.interfaces.impls.GetAllCities")
    @ResponseWrapper(localName = "getAllCitiesResponse", targetNamespace = "http://impls.interfaces.flights.mycompany.com/", className = "com.mycompany.flights.interfaces.impls.GetAllCitiesResponse")
    @Action(input = "http://impls.interfaces.flights.mycompany.com/SearchImpl/getAllCitiesRequest", output = "http://impls.interfaces.flights.mycompany.com/SearchImpl/getAllCitiesResponse")
    public List<City> getAllCities();

}
